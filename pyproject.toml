[project]
name = "handi"
dynamic = ["version"]
description = "Hand-interaction API for recognizing gestures and connecting them to interface controls."
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Vivian Li", email = "vdl21@cantab.ac.uk" }]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.10"
dependencies = ["numpy", "mediapipe", "psygnal", "opencv-python"]

[dependency-groups]
testing = [
    "tox",
    "pytest",     # https://docs.pytest.org/en/latest/contents.html
    "pytest-cov", # https://pytest-cov.readthedocs.io/en/latest/
]

[build-system]
requires = ["setuptools>=42.0.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["**/*.task"]

[tool.black]
line-length = 79
target-version = ['py310', 'py311', 'py312', 'py313']

[tool.ruff]
line-length = 79
lint.select = [
    "E",
    "F",
    "W",   #flake8
    "UP",  # pyupgrade
    "I",   # isort
    "BLE", # flake8-blind-exception
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging-format
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
lint.ignore = [
    "E501",  # line too long. let black handle this
    "UP006",
    "UP007", # type annotation. As using magicgui require runtime type annotation then we disable this.
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]
fix = true
